#include<iostream>
#include<vector>
#include<queue>

using namespace std;

void topological_sort(vector<vector<int>> &adj, vector<int> &indegree, vector<int> &ans)
{
    queue<int> Q;
    for (int i = 1;i < indegree.size(); ++i) {
        if (!indegree[i]) Q.push(i);
    }
    while (!Q.empty()) {
        int tmp = Q.front();
        Q.pop();
        ans.emplace_back(tmp);
        for (auto n:adj[tmp]) {
            indegree[n]--;
            if (!indegree[n]) Q.push(n);
        }

    }

}

int main()
{
    int n,m;
    cin >> n >> m;
    vector< vector<int> > adj(n+1);
    vector<int> indegree(n+1,0);
    vector<int> ans;
    while (m--) {
        int u,v;
        cin >> u >> v;
        adj[u].emplace_back(v);
        indegree[v]++;
    }
    topological_sort(adj, indegree, ans);
    if (ans.size() == n) cout << "YES" << endl;
    else cout << "NO" << endl;

    return 0;
}
